package main

/*
Each new term in the Fibonacci sequence is generated by
adding the previous two terms. By starting with 1 and 2,
the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose
values do not exceed four million, find the sum of the
even-valued terms.
*/

import (
	"fmt"

	"github.com/dneff/golang-euler/euler"
)

func main() {
	fmt.Println("By considering the terms in the Fibonacci")
	fmt.Println("sequence whose values do not exceed four million,")
	fmt.Println("find the sum of the even-valued terms.")

	maxValue := int32(3999999)
	result := int32(0)

	for _, x := range euler.Fibonacci(maxValue) {
		if x%2 == 0 {
			result += int32(x)
		}
	}

	fmt.Println("Answer:", result)

}
